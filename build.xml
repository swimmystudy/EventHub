<?xml version="1.0" encoding="UTF-8"?>
<!--
    Phing build config file.
    @link http://www.phing.info/
-->
<project name="EventHub" default="build">
    <!-- Properties -->
    <property name="basedir"  value="${phing.dir}" />
    <property name="appdir"  value="${basedir}/cakephp/EventHub" />
    <property name="logdir"   value="${basedir}/build/logs" />

    <!-- Build -->
    <target name="build"
        depends="clean,prepare,caketest,phpcs,phpcpd,phpmd,phpdoc"/>

    <!-- Clean up -->
    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${logdir}"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/phpdoc"/>
    </target>

    <!-- Prepare -->
    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${logdir}"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/phpdoc"/>
    </target>

    <!-- Prepare CakePHP unit test -->
    <!--target name="prepare-caketest" description="Prepare for CakePHP unit test">
        <copy file="${appdir}/Config/core.php.testing"
            tofile="${appdir}/Config/core.php" overwrite="true" />
        <copy file="${appdir}/Config/database.php.testing"
            tofile="${appdir}/Config/database.php" overwrite="true" />
        <chmod file="${appdir}/tmp" mode="0777" />
    </target-->

    <!-- CakePHP unit test with PHPUnit -->
    <target name="caketest" description="Run CakePHP unit tests with PHPUnit">
        <exec dir="${basedir}" executable="${basedir}/vendor/bin/cake" output="${logdir}/caketest.log">
            <arg line="test" />
            <arg line="app" />
            <arg line="All" />
            <arg line="-app cakephp/EventHub/" />
            <arg line="--configuration=${basedir}/phpunit.xml" />
            <arg line="--log-junit=${logdir}/phpunit.xml" />
            <arg line="--coverage-html=${basedir}/build/coverage/" />
            <arg line="--coverage-clover=${logdir}/coverage.xml" />
        </exec>
    </target>

    <!-- PHPCodeSniffer -->
    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer.">
        <exec dir="${basedir}" executable="phpcs" output="${logdir}/phpcs.log">
            <arg line="--standard=${basedir}/phpcs.xml" />
            <arg line="--report=checkstyle" />
            <arg line="--report-file=${logdir}/phpcs.xml" />
            <arg line="${appdir}" />
            <arg line="--report=summary=${logdir}/phpcs/" />
        </exec>
    </target>

    <!-- PHPMD -->
    <target name="phpmd" description="Perform project mess detection using PHPMD">
        <exec dir="${basedir}" executable="phpmd" output="${logdir}/phpmd.log">
            <arg line="${appdir}" />
            <arg line="xml" />
            <arg line="${basedir}/phpmd-rule.xml" />
            <arg line="--reportfile ${logdir}/phpmd.xml" />
            <arg line="--exclude ${appdir}/Plugin,${appdir}/Config/Schema,${appdir}/Config/Migration" />
            <arg line="--suffixes php,cpt" />
        </exec>
    </target>

    <!-- PHPCPD -->
    <target name="phpcpd" description="Perform project mess detection using PHPMD">
        <exec dir="${basedir}" executable="phpcpd" output="${logdir}/phpcpd.log">
            <arg line="--log-pmd ${logdir}/phpcpd.xml" />
            <arg line="--exclude Config/Schema" />
            <arg line="--exclude Config/Migration" />
            <arg line="--exclude Plugin" />
            <arg line="--exclude webroot" />
            <arg line="--names *.php,*.cpt" />
            <arg line="${appdir}" />
        </exec>
    </target>

    <!-- PHPDocumentor -->
    <target name="phpdoc" description="Generate Application Documentation using PHPDocumentor2">
        <exec dir="${basedir}" executable="phpdoc" output="${logdir}/phpdoc.log">
            <arg line="run" />
            <arg line="-t ${basedir}/build/phpdoc" />
            <arg line="-d ${appdir}" />
            <arg line="-p" />
        </exec>
    </target>

</project>
